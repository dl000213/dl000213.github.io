<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JAVA三大特性之封装</title>
      <link href="/2022/02/15/JAVA%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7%E4%B9%8B%E5%B0%81%E8%A3%85/"/>
      <url>/2022/02/15/JAVA%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7%E4%B9%8B%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-java" data-language="java"><code class="language-java">封装 ： 就是把抽象出的数据（属性）和对数据的操作（方法）封装在一起，     数据被保护在内部，程序的其他部分只有通过被授权的操作（方法），     才能对数据进行操作。 好处： 隐藏实现细节，可以对数据进行验证，保证数据合理性。 实现步骤： <span class="token number">1.</span> 将属性进行私有化<span class="token keyword">private</span>（不能直接修改属性）          <span class="token number">2.</span> 提供一个公共的set（）方法，用于对属性判断并赋值             <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setxxx</span><span class="token punctuation">(</span>类型 参数名<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//xxx表示某个属性</span>               <span class="token comment">// 加入数据验证的业务逻辑</span>                属性 <span class="token operator">=</span> 参数名<span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>           <span class="token number">3.</span> 提供一个公共的get（）方法，用于获取属性的值             <span class="token keyword">public</span> 数据类型  <span class="token function">getxxx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">// 权限判断</span>             <span class="token keyword">return</span> xxx<span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../%E5%9B%BE%E7%89%87/QQ%E5%9B%BE%E7%89%8720220215151847.png"></p><p><img src="/../%E5%9B%BE%E7%89%87/QQ%E5%9B%BE%E7%89%8720220215151816.png"></p><p><img src="/../%E5%9B%BE%E7%89%87/QQ%E5%9B%BE%E7%89%8720220215151833.png"></p><p><img src="/../%E5%9B%BE%E7%89%87/QQ%E5%9B%BE%E7%89%8720220215151842.png"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>访问修饰符学习笔记</title>
      <link href="/2022/02/15/%E8%AE%BF%E9%97%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/02/15/%E8%AE%BF%E9%97%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>访问修饰符：java提供四种访问控制修饰符号，用于控制方法和属性的访问权限。<br>              1.<strong>公开级别</strong>：public修饰，对外公开<br>              2.<strong>受保护级别</strong>：用protected修饰，对于子类和同一个包中的类公开<br>              3**.默认级别**：没有修饰符号，向同一个包的类公开<br>              4.<strong>私有级别</strong>：用private修饰，只有类本身可以访问，不对外公开</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">访问级别    访问修饰符    同类    同包   子类   不同包公开        <span class="token keyword">public</span>       √      √     √      √受保护     <span class="token keyword">protected</span>     √      √      √     ×默认        无           √      √      ×     ×私有        <span class="token keyword">private</span>      √      ×     ×      ×注意事项：<span class="token number">1.</span>修饰符可以用来修饰类中的 属性、成员方法和类 <span class="token number">2.</span>只有 默认的 和 <span class="token keyword">public</span> 才能修饰类，且遵循上述访问特点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2022/02/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/02/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<img src="../%E5%9B%BE%E7%89%87/QQ%E5%9B%BE%E7%89%8720220208211616-16443267507061.jpg" style="zoom:50%;" /><p>小菜鸡的学习之路开始了。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/08/hello-world/"/>
      <url>/2022/02/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
